const app = require('../app')
const request = require('supertest')

test ('Test if member can send a message to a group', async () => {
    let response = await request(app)
        .post('/login')
        .send({ email: 'thory@gmail.com', password: '123456' })
    expect(response.statusCode).toBe(200)
    expect(response.body).toHaveProperty('token')
    response = await request(app)
        .post('/api/messages/1')
        .set('x-access-token', response.body.token)
        .send({ content: 'Hello, group!' })
    expect(response.statusCode).toBe(201)
})

test ('Test if non-member cannot send a message to a group', async () => {
    let response = await request(app)
        .post('/login')
        .send({ email: 'luke@gmail.com', password: '123456' })
    expect(response.statusCode).toBe(200)
    expect(response.body).toHaveProperty('token')
    response = await request(app)
        .post('/api/messages/1')
        .set('x-access-token', response.body.token)
        .send({ content: 'Hello, group!' })
    expect(response.statusCode).toBe(403)
})

test ('Test if member can list all the messagers post in the group', async () => {
    let response = await request(app)
        .post('/login')
        .send({ email: 'thory@gmail.com', password: '123456' })
    expect(response.statusCode).toBe(200)
    expect(response.body).toHaveProperty('token')
    response = await request(app)
        .get('/api/messages/1')
        .set('x-access-token', response.body.token)
    expect(response.statusCode).toBe(200)
})

test ('Test if non-member cannot list all the messagers post in the group', async () => {
    let response = await request(app)
        .post('/login')
        .send({ email: 'luke@gmail.com', password: '123456' })
    expect(response.statusCode).toBe(200)
    expect(response.body).toHaveProperty('token')
    response = await request(app)
        .get('/api/messages/1')
        .set('x-access-token', response.body.token)
    expect(response.statusCode).toBe(403)
})